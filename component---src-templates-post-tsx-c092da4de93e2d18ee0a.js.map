{"version":3,"sources":["webpack:///./src/Templates/Post.tsx","webpack:///./src/Configuration/media.ts","webpack:///./src/Configuration/Config.ts","webpack:///./src/Components/Subline.tsx","webpack:///./src/Components/Article.tsx","webpack:///./src/Components/Button.tsx","webpack:///./src/Components/Header.tsx","webpack:///./src/Configuration/Theme.ts","webpack:///./src/Components/Layout.tsx","webpack:///./src/Components/PrevNext.tsx","webpack:///./src/Components/SectionTitle.tsx","webpack:///./src/Components/SEO.tsx","webpack:///./src/Components/Wrapper.tsx","webpack:///./src/Components/Content.tsx","webpack:///./src/Components/Title.tsx","webpack:///./src/Components/Pagination.tsx","webpack:///./src/Components/index.ts","webpack:///./src/Components/Logo.tsx"],"names":["PostContent","styled","div","withConfig","displayName","componentId","PostPage","render","_this$props$pathConte","this","props","pathContext","prev","next","post","data","markdownRemark","react__WEBPACK_IMPORTED_MODULE_3___default","a","createElement","_Components__WEBPACK_IMPORTED_MODULE_6__","Fragment","postPath","fields","slug","postNode","postSEO","react_helmet__WEBPACK_IMPORTED_MODULE_4___default","title","frontmatter","config","siteTitle","banner","gatsby__WEBPACK_IMPORTED_MODULE_1__","to","_Components_Logo__WEBPACK_IMPORTED_MODULE_7__","light","date","timeToRead","kebabCase","category","dangerouslySetInnerHTML","__html","html","tags","map","tag","i","key","length","React","PureComponent","postQuery","__webpack_require__","d","__webpack_exports__","media","tablet","phone","pathPrefix","siteTitleAlt","siteUrl","siteLanguage","siteBanner","defaultBg","favicon","siteDescription","author","siteLogo","siteLogoLight","userTwitter","ogLanguage","themeColor","backgroundColor","headerFontFamily","bodyFontFamily","baseFontSize","siteFBAppID","Google_Tag_Manager_ID","POST_PER_PAGE","Subline","theme","fontSize","small","rgba","colors","white","sectionTitle","Post","article","Title","h2","Initiale","span","Excerpt","p","Article","_React$PureComponent","apply","arguments","inheritsLoose_default","prototype","_this$props","excerpt","firstChar","charAt","react_default","gatsby_browser_entry","Button","button","primary","big","transitions","normal","curriedDarken","HeaderWrapper","header","Content","Header","children","Theme","bg","grey","dark","default","ultraLight","GlobalStyle","createGlobalStyle","_templateObject","Footer","footer","Copyleft","Layout","query","styled_components_browser_esm","split","site","buildTime","_1536950682","Wrapper","Prev","Next","PrevNext","SectionTitle","uppercase","SEO","description","image","postURL","realPrefix","blogURL","schemaOrgJSONLD","@context","@type","@id","url","name","alternateName","headline","datePublished","dateModified","publisher","logo","isPartOf","mainEntityOfPage","Helmet_default","lang","content","type","JSON","stringify","property","ogSiteName","fullWidth","h3","PaginationContainer","PaginationContent","Pagination","currentPage","totalPages","isFirst","isLast","prevPage","toString","nextPage","className","rel","Array","from","_","Article_Article","Header_Header","Layout_Layout","PrevNext_PrevNext","SEO_SEO","Wrapper_Wrapper","Content_Content","Title_Title","Pagination_Pagination","styled_components__WEBPACK_IMPORTED_MODULE_0__","_Configuration_Config__WEBPACK_IMPORTED_MODULE_1__","Logo"],"mappings":"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","file":"component---src-templates-post-tsx-c092da4de93e2d18ee0a.js","sourcesContent":["import { graphql, Link } from 'gatsby';\nimport kebabCase from 'lodash/kebabCase';\nimport React from 'react';\nimport Helmet from 'react-helmet';\nimport styled from 'styled-components';\nimport { Content, Header, Layout, PrevNext, SectionTitle, SEO, Subline, Wrapper } from '../Components';\nimport Logo from '../Components/Logo';\nimport config from '../Configuration/Config';\nimport '../Configuration/prismjs-theme.css';\nimport PathContext from '../Types/PathContext';\nimport Post from '../Types/Post';\n\nconst PostContent = styled.div`\n  margin-top: 4rem;\n`;\n\ninterface IPostPageProps {\n  data: {\n    markdownRemark: Post;\n  };\n  pathContext: PathContext;\n}\n\nexport default class PostPage extends React.PureComponent<IPostPageProps> {\n  public render() {\n    const { prev, next } = this.props.pathContext;\n    const post = this.props.data.markdownRemark;\n    return (\n      <Layout>\n        {post ? (\n          <>\n            <SEO postPath={post.fields.slug} postNode={post} postSEO />\n            <Helmet title={`${post.frontmatter.title} | ${config.siteTitle}`} />\n            <Header banner={post.frontmatter.banner}>\n              <Link to=\"/\">\n                <Logo light />\n              </Link>\n              <SectionTitle>{post.frontmatter.title}</SectionTitle>\n              <Subline light={true}>\n                {post.frontmatter.date} &mdash; {post.timeToRead} Min Read &mdash; In{' '}\n                <Link to={`/categories/${kebabCase(post.frontmatter.category)}`}>{post.frontmatter.category}</Link>\n              </Subline>\n            </Header>\n            <Wrapper>\n              <Content>\n                <PostContent dangerouslySetInnerHTML={{ __html: post.html }} />\n                {post.frontmatter.tags ? (\n                  <Subline>\n                    Tags: &#160;\n                    {post.frontmatter.tags.map((tag, i) => (\n                      <Link key={i} to={`/tags/${kebabCase(tag)}`}>\n                        <strong>{tag}</strong> {i < post.frontmatter.tags.length - 1 ? `, ` : ``}\n                      </Link>\n                    ))}\n                  </Subline>\n                ) : null}\n                <PrevNext prev={prev} next={next} />\n              </Content>\n            </Wrapper>\n          </>\n        ) : null}\n      </Layout>\n    );\n  }\n}\n\nexport const postQuery = graphql`\n  query($slug: String!) {\n    markdownRemark(fields: { slug: { eq: $slug } }) {\n      html\n      fields {\n        slug\n      }\n      frontmatter {\n        title\n        date(formatString: \"DD.MM.YYYY\")\n        category\n        tags\n        banner\n      }\n      timeToRead\n    }\n  }\n`;\n","const sizes = {\n  tablet: '1200px',\n  phone: '600px',\n};\n\nexport const media = {\n  tablet: `(max-width: ${sizes.tablet})`,\n  phone: `(max-width: ${sizes.phone})`,\n};\n","export default {\n  pathPrefix: '/', // Prefix for all links. If you deploy your site to example.com/portfolio your pathPrefix should be \"portfolio\"\n\n  siteTitle: 'Danger Technologies', // Navigation and Site Title\n  siteTitleAlt: 'Danger Technologies', // Alternative Site title for SEO\n  siteUrl: 'http://dangertechnologies.com', // Domain of your site. No trailing slash!\n  siteLanguage: 'en', // Language Tag on <html> element\n  siteBanner: '/assets/banner.jpg', // Your image for og:image tag. You can find it in the /static folder\n  defaultBg: '/assets/bg/5.jpg', // default post background header\n  favicon: 'src/favicon.png', // Your image for favicons. You can find it in the /src folder\n  siteDescription: 'A creative outlet and one-man development studio', // Your site description\n  author: 'Victor Rudolfsson', // Author for schemaORGJSONLD\n  siteLogo: '/assets/logo.png', // Image for schemaORGJSONLD\n  siteLogoLight: '/assets/logo-light.png', // Image for schemaORGJSONLD\n\n  userTwitter: '@fl0wsnake', // Twitter Username - Optional\n  ogLanguage: 'en_US', // Facebook Language\n\n  // Manifest and Progress color\n  // See: https://developers.google.com/web/fundamentals/web-app-manifest/\n  themeColor: 'rgb(220, 183, 55)',\n  backgroundColor: 'rgb(61, 57, 55)',\n\n  // Settings for typography.ts\n  headerFontFamily: 'Bitter',\n  bodyFontFamily: 'Open Sans',\n  baseFontSize: '18px',\n\n  // Social media\n  siteFBAppID: '',\n\n  //\n  Google_Tag_Manager_ID: 'GTM-MVP42QK',\n  POST_PER_PAGE: 4,\n};\n","import rgba from 'polished/lib/color/rgba';\nimport styled from 'styled-components';\n\ninterface Props {\n  theme: {\n    fontSize: {\n      small: number;\n      big: number;\n    };\n    colors: {\n      white: string;\n      grey: {\n        light: string;\n      };\n    };\n  };\n  sectionTitle: string;\n  light: boolean;\n}\n\nexport const Subline: any = styled.div`\n  font-size: ${(props: Props) => props.theme.fontSize.small};\n  ${(props: Props) => props.light && `color: ${rgba(props.theme.colors.white, 0.7)}`};\n  ${(props: Props) => props.sectionTitle && 'text-align: center'};\n`;\n","import { Link } from 'gatsby';\nimport kebabCase from 'lodash/kebabCase';\nimport React from 'react';\nimport styled from 'styled-components';\nimport { Subline } from './Subline';\n\nconst Post = styled.article`\n  display: flex;\n  flex-direction: column;\n  margin-top: 3.5rem;\n  margin-bottom: 3.5rem;\n`;\n\nconst Title = styled.h2`\n  position: relative;\n  text-shadow: 0 12px 30px rgba(0, 0, 0, 0.15);\n  margin-bottom: 0.75rem;\n`;\n\nconst Initiale = styled.span`\n  position: absolute;\n  font-size: 7rem;\n  transform: translate(-50%, -50%);\n  opacity: 0.08;\n  user-select: none;\n  z-index: -1;\n`;\n\nconst Excerpt = styled.p`\n  grid-column: -1 / 1;\n  margin-top: 1rem;\n  margin-bottom: 1rem;\n`;\n\ninterface Props {\n  title: string;\n  date: string;\n  excerpt: string;\n  slug: string;\n  timeToRead: number;\n  category: string;\n}\n\nexport class Article extends React.PureComponent<Props> {\n  public render() {\n    const { title, date, excerpt, slug, timeToRead, category } = this.props;\n    const firstChar = title.charAt(0);\n\n    return (\n      <Post>\n        <Title>\n          <Initiale>{firstChar}</Initiale>\n          <Link to={`/posts/${slug}`}>{title}</Link>\n        </Title>\n        <Subline>\n          {date} &mdash; {timeToRead} Min Read &mdash; In\n          <Link to={`/categories/${kebabCase(category)}`}> {category}</Link>\n        </Subline>\n        <Excerpt>{excerpt}</Excerpt>\n      </Post>\n    );\n  }\n}\n","import curriedDarken from 'polished/lib/color/darken';\nimport styled from 'styled-components';\n\nexport const Button: any = styled.button`\n  background: ${props => props.theme.colors.primary};\n  border: none;\n  display: inline-flex;\n  align-items: center;\n  margin: 0 0.5rem;\n  border-radius: ${(props: any) => (props.big ? '1.5rem' : '1rem')};\n  font-size: ${(props: any) => (props.big ? '1.2rem' : '1rem')};\n  color: white;\n  padding: ${(props: any) => (props.big ? '0.35rem 1.6rem' : '0.25rem 1.5rem')};\n  transition: all ${(props: any) => props.theme.transitions.normal};\n  box-shadow: 0 4px 6px rgba(50, 50, 93, 0.11), 0 1px 3px rgba(0, 0, 0, 0.08);\n  &:hover {\n    background: ${(props: any) => curriedDarken(0.3, props.theme.colors.primary)};\n    cursor: pointer;\n    transform: translateY(-2px);\n  }\n  &:focus {\n    outline: none;\n  }\n  svg {\n    width: 20px;\n    height: 20px;\n    margin-right: 0.75rem;\n    fill: white;\n  }\n`;\n","import React from 'react';\nimport styled from 'styled-components';\nimport config from '../Configuration/Config';\nimport { media } from '../Configuration/media';\n\nconst HeaderWrapper: any = styled.header`\n  position: relative;\n  background: url(${(props: any) => props.banner}) no-repeat;\n  background-size: cover;\n  padding: 8rem 2rem 10rem;\n  text-align: center;\n  background-position-y: 70%;\n  ::after {\n    background: transparent url(/assets/mask.svg) no-repeat bottom center;\n    background-size: 101%;\n\n    bottom: -2px;\n    content: '';\n    display: block;\n    height: 100%;\n    left: 0;\n    position: absolute;\n    width: 100%;\n  }\n  @media ${media.tablet} {\n    padding: 4rem 2rem 6rem;\n  }\n  @media ${media.phone} {\n    padding: 1rem 0.5rem 2rem;\n  }\n`;\n\nconst Content = styled.div`\n  position: relative;\n  z-index: 999;\n  align-items: center;\n  justify-content: center;\n  display: flex;\n  flex-direction: column;\n  a {\n    color: white;\n    &:hover {\n      opacity: 0.85;\n      color: white;\n    }\n  }\n`;\n\ninterface Props {\n  children: any;\n  banner?: string;\n}\n\nexport class Header extends React.PureComponent<Props> {\n  public render() {\n    return (\n      <HeaderWrapper banner={this.props.banner || config.defaultBg}>\n        <Content>{this.props.children}</Content>\n      </HeaderWrapper>\n    );\n  }\n}\n","const colors = {\n  primary: 'rgb(61, 57, 55)', // Color for buttons or links\n  bg: '#fff', // Background color\n  white: '#fff',\n  grey: {\n    dark: 'rgba(0, 0, 0, 0.9)',\n    default: 'rgba(0, 0, 0, 0.7)',\n    light: 'rgba(0, 0, 0, 0.5)',\n    ultraLight: 'rgba(0, 0, 0, 0.25)',\n  },\n};\n\nconst transitions = {\n  normal: '0.5s',\n};\n\nconst fontSize = {\n  small: '0.9rem',\n  big: '2.9rem',\n};\n\nexport default {\n  colors,\n  transitions,\n  fontSize,\n};\n","import { graphql, StaticQuery } from 'gatsby';\nimport split from 'lodash/split';\nimport React from 'react';\nimport styled, { createGlobalStyle, ThemeProvider } from 'styled-components';\nimport { media } from '../Configuration/media';\nimport theme from '../Configuration/Theme';\nimport './layout.scss';\n\nconst GlobalStyle = createGlobalStyle`\n  ::selection {\n    color: ${theme.colors.bg};\n    background: ${theme.colors.primary};\n  }\n  body {\n    background: ${theme.colors.bg};\n    color: ${theme.colors.grey.default};\n    @media ${media.phone} {\n      font-size: 14px;\n    }\n  }\n  a {\n    color: ${theme.colors.grey.dark};\n    text-decoration: none;\n    transition: all ${theme.transitions.normal};\n  }\n  a:hover {\n    color: ${theme.colors.primary};\n  }\n  h1, h2, h3, h4 {\n    color: ${theme.colors.grey.dark};\n  }\n  blockquote {\n    font-style: italic;\n    position: relative;\n  }\n\n  blockquote:before {\n    content: \"\";\n    position: absolute;\n    background: ${theme.colors.primary};\n    height: 100%;\n    width: 6px;\n    margin-left: -1.6rem;\n  }\n  label {\n    margin-bottom: .5rem;\n    color: ${theme.colors.grey.dark};\n  }\n  input, textarea {\n    border-radius: .5rem;\n    border: none;\n    background: rgba(0, 0, 0, 0.05);\n    padding: .25rem 1rem;\n    &:focus {\n      outline: none;\n    }\n  }\n  .textRight {\n    text-align:right;\n  }\n`;\n\nconst Footer = styled.footer`\n  text-align: center;\n  padding: 3rem 0;\n  span {\n    font-size: 0.75rem;\n  }\n`;\n\nconst Copyleft = styled.span`\n  display: inline-block;\n  transform: rotate(180deg);\n`;\n\nexport class Layout extends React.PureComponent<{}> {\n  public render() {\n    const { children } = this.props;\n\n    return (\n      <StaticQuery\n        query={graphql`\n          query LayoutQuery {\n            site {\n              buildTime(formatString: \"DD.MM.YYYY\")\n            }\n          }\n        `}\n        render={data => (\n          <ThemeProvider theme={theme}>\n            <React.Fragment>\n              <GlobalStyle />\n              {children}\n              <Footer>\n                <Copyleft>&copy;</Copyleft> {split(data.site.buildTime, '.')[2]} by Victor Rudolfsson. All rights reversed. <br />\n                <span>Last build: {data.site.buildTime}</span>\n              </Footer>\n            </React.Fragment>\n          </ThemeProvider>\n        )}\n      />\n    );\n  }\n}\n","import { Link } from 'gatsby';\nimport kebabCase from 'lodash/kebabCase';\nimport React from 'react';\nimport styled from 'styled-components';\nimport Post from '../Types/Post';\n\nconst Wrapper = styled.div`\n  display: flex;\n  margin: 6rem auto 0 auto;\n  a {\n    color: ${props => props.theme.colors.primary};\n    display: flex;\n    align-items: center;\n  }\n  justify-items: center;\n`;\n\nconst Prev = styled.div`\n  span {\n    text-transform: uppercase;\n    font-size: 0.8rem;\n    color: ${props => props.theme.colors.grey.light};\n  }\n`;\n\nconst Next = styled.div`\n  margin-left: auto;\n  text-align: right;\n  span {\n    text-transform: uppercase;\n    font-size: 0.8rem;\n    color: ${props => props.theme.colors.grey.light};\n  }\n`;\n\ninterface Props {\n  next: Post;\n  prev: Post;\n}\n\nexport class PrevNext extends React.PureComponent<Props> {\n  public render() {\n    const { prev, next } = this.props;\n    return (\n      <Wrapper>\n        {prev && (\n          <Prev>\n            <span>Previous</span>\n            <Link to={`/posts/${kebabCase(prev.frontmatter.title)}`}>{prev.frontmatter.title}</Link>\n          </Prev>\n        )}\n        {next && (\n          <Next>\n            <span>Next</span>\n            <Link to={`/posts/${kebabCase(next.frontmatter.title)}`}>{next.frontmatter.title}</Link>\n          </Next>\n        )}\n      </Wrapper>\n    );\n  }\n}\n","import styled from 'styled-components';\n\nexport const SectionTitle: any = styled.div`\n  font-size: ${props => props.theme.fontSize.big};\n  text-transform: ${(props: any) => (props.uppercase ? 'uppercase' : 'normal')};\n  text-align: center;\n  font-family: monospace;\n  color: ${props => props.theme.colors.white};\n  position: relative;\n  padding: 2rem 0 0;\n  margin-bottom: 2rem;\n  &:after {\n    content: '';\n    height: 1px;\n    width: 50px;\n    position: absolute;\n    bottom: 0;\n    left: 50%;\n    margin-left: -25px;\n    background: ${props => props.theme.colors.white};\n  }\n`;\n","/* eslint-disable react/require-default-props */\nimport React from 'react';\nimport Helmet from 'react-helmet';\nimport config from '../Configuration/Config';\nimport Post from '../Types/Post';\n\ninterface ISEO {\n  postNode: Post;\n  postPath: string;\n  postSEO: boolean;\n}\n\nexport const SEO = (props: ISEO) => {\n  const { postNode, postPath, postSEO } = props;\n  let title;\n  let description;\n  let image;\n  let postURL;\n  const realPrefix = config.pathPrefix === '/' ? '' : config.pathPrefix;\n  if (postSEO) {\n    const postMeta = postNode.frontmatter;\n    title = postMeta.title;\n    description = postNode.excerpt;\n    image = config.siteBanner;\n    postURL = config.siteUrl + realPrefix + postPath;\n  } else {\n    title = config.siteTitle;\n    description = config.siteDescription;\n    image = config.siteBanner;\n  }\n  image = config.siteUrl + realPrefix + image;\n  const blogURL = config.siteUrl + config.pathPrefix;\n  let schemaOrgJSONLD = [\n    {\n      '@context': 'http://schema.org',\n      '@type': 'WebSite',\n      '@id': blogURL,\n      url: blogURL,\n      name: title,\n      alternateName: config.siteTitleAlt ? config.siteTitleAlt : '',\n    },\n  ];\n  if (postSEO) {\n    schemaOrgJSONLD = [\n      {\n        '@context': 'http://schema.org',\n        '@type': 'BlogPosting',\n        // @ts-ignore\n        '@id': postURL,\n        // @ts-ignore\n        url: postURL,\n        name: title,\n        alternateName: config.siteTitleAlt ? config.siteTitleAlt : '',\n        headline: title,\n        image: {\n          '@type': 'ImageObject',\n          url: image,\n        },\n        description: config.siteDescription,\n        datePublished: postNode.frontmatter.date,\n        dateModified: postNode.frontmatter.date,\n        author: {\n          '@type': 'Person',\n          name: config.author,\n        },\n        publisher: {\n          '@type': 'Organization',\n          name: config.author,\n          logo: {\n            '@type': 'ImageObject',\n            url: config.siteUrl + realPrefix + config.siteLogo,\n          },\n        },\n        isPartOf: blogURL,\n        mainEntityOfPage: {\n          '@type': 'WebSite',\n          '@id': blogURL,\n        },\n      },\n    ];\n  }\n  return (\n    <Helmet>\n      <html lang={config.siteLanguage} />\n      <title>{config.siteTitle}</title>\n      <meta name=\"description\" content={description} />\n      <meta name=\"image\" content={image} />\n      <script type=\"application/ld+json\">{JSON.stringify(schemaOrgJSONLD)}</script>\n      <meta property=\"og:locale\" content={config.ogLanguage} />\n      <meta property=\"og:site_name\" content={config.ogSiteName ? config.ogSiteName : ''} />\n      <meta property=\"og:url\" content={postSEO ? postURL : blogURL} />\n      {postSEO ? <meta property=\"og:type\" content=\"article\" /> : null}\n      <meta property=\"og:title\" content={title} />\n      <meta property=\"og:description\" content={description} />\n      <meta property=\"og:image\" content={image} />\n      <meta property=\"fb:app_id\" content={config.siteFBAppID ? config.siteFBAppID : ''} />\n      <meta name=\"twitter:card\" content=\"summary_large_image\" />\n      <meta name=\"twitter:creator\" content={config.userTwitter ? config.userTwitter : ''} />\n      <meta name=\"twitter:title\" content={title} />\n      <meta name=\"twitter:url\" content={config.siteUrl} />\n      <meta name=\"twitter:description\" content={description} />\n      <meta name=\"twitter:image\" content={image} />\n    </Helmet>\n  );\n};\n","import styled from 'styled-components';\nimport { media } from '../Configuration/media';\n\nexport const Wrapper: any = styled.div`\n  display: flex;\n  flex-direction: column;\n  margin: 0 auto;\n  max-width: ${(props: any) => (props.fullWidth ? '100%' : '100rem')};\n  padding: ${(props: any) => (props.fullWidth ? '0' : '0 6rem')};\n  @media ${media.tablet} {\n    padding: ${(props: any) => (props.fullWidth ? '0' : '0 3rem')};\n  }\n  @media ${media.phone} {\n    padding: ${(props: any) => (props.fullWidth ? '0' : '0 1rem')};\n  }\n`;\n","import styled from 'styled-components';\nimport { media } from '../Configuration/media';\n\nexport const Content = styled.div`\n  box-shadow: 0 4px 120px rgba(0, 0, 0, 0.1);\n  border-radius: 1rem;\n  padding: 2rem 4rem;\n  background-color: ${props => props.theme.colors.bg};\n  z-index: 9000;\n  margin-top: -4rem;\n  form {\n    p {\n      label,\n      input {\n        display: block;\n      }\n      input {\n        min-width: 275px;\n      }\n      textarea {\n        resize: vertical;\n        min-height: 150px;\n        width: 100%;\n      }\n    }\n  }\n  @media ${media.tablet} {\n    padding: 3rem 3rem;\n  }\n  @media ${media.phone} {\n    padding: 2rem 1.5rem;\n  }\n`;\n","import styled from 'styled-components';\n\nexport const Title = styled.h3`\n  position: relative;\n  text-shadow: 0 12px 30px rgba(0, 0, 0, 0.15);\n  margin-bottom: 0.75rem;\n`;\n","import { Link } from 'gatsby';\nimport curriedDarken from 'polished/lib/color/darken';\nimport React from 'react';\nimport styled from 'styled-components';\nimport { media } from '../Configuration/media';\nimport theme from '../Configuration/Theme';\n\nexport const PaginationContainer = styled.div`\n  text-align: center;\n  margin: 2rem;\n  }\n`;\n\nexport const PaginationContent = styled.div`\n    display: inline-block;\n    padding: 0 2.5rem;\n    border-radius: 3.5rem;\n    background-color: #eee;\n    \n     @media ${media.phone} {\n      padding: 0 1rem;\n     }\n\n    .page-numbers {\n      display: block;\n      float:left;\n      transition: 400ms ease;\n      color: ${theme.colors.grey.light};\n      letter-spacing: 0.1em;\n      padding: 1rem;\n\n      &:hover,\n      &.current {\n        background-color: ${curriedDarken(0.2, theme.colors.primary)};\n        color: ${theme.colors.white};\n      }\n      \n      &.prev {\n        margin-left: -1.5rem;\n      }\n      \n      &.next {\n        margin-right: -1.5rem;\n      }\n\n      &.prev:hover,\n      &.next:hover {\n        background-color: transparent;\n        color: ${curriedDarken(0.2, theme.colors.primary)};\n      }\n      \n\n      @media ${media.tablet} {\n        padding: 0 1.4rem;\n        display: none;\n\n        &:nth-of-type(2) {\n          position: relative;\n          padding-right: 5rem;\n\n          &::after {\n            content: '...';\n            position: absolute;\n            top: 0;\n            left: 4.5rem;\n          }\n        }\n\n        &:nth-child(-n + 3),\n        &:nth-last-child(-n + 3) {\n          display: block;\n        }\n\n        &:nth-last-child(-n + 4) {\n          padding-right: 1.4rem;\n\n          &::after {\n            content: none;\n          }\n        }\n      }\n    `;\n\ninterface Props {\n  currentPage: number;\n  totalPages: number;\n  url: string;\n}\n\nexport class Pagination extends React.PureComponent<Props> {\n  public render() {\n    const { currentPage, totalPages, url } = this.props;\n    const isFirst = currentPage === 1;\n    const isLast = currentPage === totalPages;\n    const prevPage = currentPage - 1 === 1 ? `/${url}/` : `/${url}/${(currentPage - 1).toString()}`;\n    const nextPage = `/${url}/${(currentPage + 1).toString()}`;\n    return totalPages > 1 ? (\n      <PaginationContainer>\n        <PaginationContent>\n          {!isFirst && (\n            <Link className=\"prev page-numbers\" to={prevPage} rel=\"prev\">\n              ← Prev\n            </Link>\n          )}\n          {Array.from({ length: totalPages }, (_, i) => (\n            <Link\n              className={currentPage === i + 1 ? 'page-numbers current' : 'page-numbers'}\n              key={`pagination-number${i + 1}`}\n              to={`/${url}/${i === 0 ? '' : i + 1}`}\n            >\n              {i + 1}\n            </Link>\n          ))}\n          {!isLast && (\n            <Link className=\"next page-numbers\" to={nextPage} rel=\"next\">\n              Next →\n            </Link>\n          )}\n        </PaginationContent>\n      </PaginationContainer>\n    ) : null;\n  }\n}\n","export * from './Article';\nexport * from './Button';\nexport * from './Header';\nexport * from './Layout';\nexport * from './PrevNext';\nexport * from './SectionTitle';\nexport * from './SEO';\nexport * from './Subline';\nexport * from './Wrapper';\nexport * from './Content';\nexport * from './Title';\nexport * from './Pagination';\n","import React from 'react';\nimport styled, { ThemedStyledComponentsModule, ThemedStyledProps } from 'styled-components';\nimport config from '../Configuration/Config';\n\ninterface ILogoProps extends ThemedStyledProps<React.HTMLProps<React.HTMLAttributes<HTMLDivElement>>, HTMLDivElement> {\n  light?: boolean;\n}\n\nconst Logo = styled.div`\n  background-image: url(${(props: ILogoProps) => (props.light ? config.siteLogoLight : config.siteLogo)});\n  width: 400px;\n  height: 100px;\n  background-repeat: no-repeat;\n  background-size: cover;\n`;\n\nexport default Logo;\n"],"sourceRoot":""}